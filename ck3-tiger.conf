# The ck3-tiger.conf file is in standard Paradox script format.
# It should be placed in the top directory of your mod.

languages = {
	# This will check only english and german localizations
	check = "english"
	check = "german"

	# If you DON'T specify any check languages, you can instead say which ones to skip.
	skip = "french"
	skip = "spanish"

	# If you don't specify anything in languages, the validator will check all languages.
}

# The ignore blocks still work but are deprecated. It might be removed in a later version.
# Consider using the filter.blacklist block instead.
ignore = { }

# Allows configuring a number of ways to reduce the number of reports that are printed by CK3-Tiger.
filter = {

    # Reports that aren't important enough will not be printed.
    # Valid values are: Error, Warning, Info, Untidy.
    # This is an optional value, defaulting to Warning.
    minimum_severity = Warning

    # How confident is CK3-Tiger that the report is not a false-positive?
    # Valid values are: Weak, Reasonable, Strong.
    # This is an optional value, it defaults to Reasonable.
    minimum_confidence = Reasonable

    # Whether to report about problems in vanilla game files.
    # Setting this to 'yes' results in a LOT of spam.
    # Optional boolean value, defaults to no.
    show_vanilla = no

    # Whether to report about problems in other loaded mods.
    # Optional boolean value, defaults to no.
    show_loaded_mods = no

    # Reports that match at least one of the blacklist's rules will not be printed.
    # You can only add 1 blacklist block.
    # Within the blacklist block, you may add as many rules as you like.
    # Reports that match both a whitelist rule and a blacklist rule will not be shown. (Blacklist wins)
    blacklist = {
        # Adds a rule that the given report-key is completely ignored in all files.
        # Report keys are printed in the output, in parentheses after Error or Warning.
        # e.g.: "Warning(field-missing): required field `limit` missing" <== Here, field-missing is the report-key.
        rule_key = example-key-name
        # Adds a rule that the given file is completely ignored.
        # Files must be relative to the game directory: e.g. `common/traits/00_traits.txt`
        # You can also add a folder, in which case all files in that folder are ignored. e.g. `common/traits`
        rule_file = example/file/location
        # Adds a rule that the given report-keys are ignored in the given files.
        rule_keys_in_files = {
            # Specify a report-key to be ignored within the given files.
            key = example-key-name
            # You may add multiple report-keys here.
            key = another-key-name
            # A file or folder location. All report-keys in this rule are ignored for all files and folders in this rule.
            file = example/file/location
            # You may add multiple files here.
            file = another/file/location
        }
    }

    # Reports that DON'T match at least one of the whitelist's rules will not be printed.
    # You can only add 1 whitelist block.
    # Within the whitelist block, you may add as many rules as you like.
    # Reports that match both a whitelist rule and a blacklist rule will not be shown. (Blacklist wins)
    whitelist = {
        # Whitelist syntax works exactly like the blacklist.
    }

}

# Use a load_mod section to tell ck3-tiger to load another mod before this one.
# This is useful when making submods or compatibility patch mods.
# You can have multiple load_mod sections.
#load_mod = {
#	# The label will be used in the error output to mark files from this mod
#	label = "FE"
#	# The path to the mod's .mod file. Use forward slashes.
#	modfile = "/home/gamer/Pdx/mod/FactionsExplained.mod"
#}

#characters = {
#	# Only warn about characters who are born by this date (usually your last bookmark)
#	only_born = "1511.1.1"  # optional
#}

# Sometimes ck3-tiger makes a mistake in determining the scope types expected
# by a scripted trigger or effect. Its conclusions can be overridden here.
# Scope overrides can be ALL (to accept any scope) or a list separated by |,
# like character|province|landed_title
scope_override = {
	artifact_low_rarity_trigger = ALL
	artifact_medium_rarity_trigger = ALL
	artifact_high_rarity_trigger = ALL
	artifact_region_trigger = ALL
}

# Optional block to control output styles and colors. Colors are enabled by default.
# Another way to disable all ANSI characters in the output is to supply the --no-color flag.
# That flag will override anything you define here, in the config file.
output_style = {
    # Default value is 'yes'.
    # If set to 'no', no ANSI characters will be added to the output and the output will not be colored.
    # Also, all other settings in this block will be ignored.
    enable = yes

    # The maximum line-length of the output.
    # Set this to 0 to disable length restrictions.
    # This is an optional value, it defaults to 120.
    max_line_length = 120

    # Optional block to set the error color.
#    error = {
#        # Default is red. Supported values are Black, Red, Green, Yellow, Blue, Purple, Cyan, White.
#        color = "red"
#    }
    # Optional block to set the warning color.
#    warning = {
#        # Default is yellow. Supported values are Black, Red, Green, Yellow, Blue, Purple, Cyan, White.
#        color = "yellow"
#    }
    # Optional block to set the info color.
#    info = {
#        # Default is green. Supported values are Black, Red, Green, Yellow, Blue, Purple, Cyan, White.
#        color = "green"
#    }
    # Optional block to set the advice color.
#    untidy = {
#        # Default is cyan. Supported values are Black, Red, Green, Yellow, Blue, Purple, Cyan, White.
#        color = "cyan"
#    }

}
